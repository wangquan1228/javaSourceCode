<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 为这个 mapper指定一个唯一的namespace，namespace=包名+sql映射文件名(习惯上命名) 这样就能够保证namespace的值是唯一的 
	eg. namespace="com.wq.mapper.StudentMapper" -->

<mapper namespace="com.wq.mapper.StudentMapper">

	<!-- 在select标签中编写查询的SQL语句， 设置select标签的 id属性为getStudnetById，id属性值必须是唯一的，不能够重复 
		parameterType属性指明查询时使用的参数类型，通过占位符#{}来接受参数
		resultType属性指明查询返回的结果集类型 resultType="com.wq.bean.Student"就表示将查询结果封装成一个student类的对象返回 
		Student类就是student表所对应的实体类 -->

	<!-- 单个查询 -->
	<select id="getStudentById" parameterType="java.lang.Integer"
		resultType="com.wq.bean.Student">
		select * from student where id = #{id}
	</select>

	<!-- 多个查询(查询列表) -->
	<select id="getStudentList" resultType="com.wq.bean.Student">
		select * from student;
	</select>


	<!-- 添加学生 ,传入的参数的javabean中的属性,而不是数据库的字段名 -->
	<insert id="addStudent" parameterType="com.wq.bean.Student">
		insert into student(name,age,create_time)
		values(#{name},#{age},#{createTime})
	</insert>

	<!--删除学生 -->
	<delete id="deleteStudent" parameterType="java.lang.Integer">
		delete from student where id=#{id}
	</delete>
	
	<!-- 修改信息 -->
	<update id="updateStudent" parameterType="com.wq.bean.Student">
	   update student set name=#{name},age=#{age},create_time=#{createTime} where id=#{id}
	</update>
</mapper>